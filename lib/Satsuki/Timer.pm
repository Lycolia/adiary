use strict;
BEGIN { require Time::HiRes; };
#-------------------------------------------------------------------------------
# 高精度タイマー
#						(C)2012 nabe / nabe@abk
#-------------------------------------------------------------------------------
package Satsuki::Timer;
our $VERSION = '1.00';
###############################################################################
# ■基本処理
###############################################################################
#------------------------------------------------------------------------------
# ●【コンストラクタ】
#------------------------------------------------------------------------------
sub new {
	bless({}, shift);
}

###############################################################################
# ■メインルーチン
###############################################################################
#------------------------------------------------------------------------------
# ●タイマーの始動
#------------------------------------------------------------------------------
sub start {
	if (!defined $Time::HiRes::VERSION) { return; }
	my ($self,$name) = @_;

	$self->{"tm_$name"} = Time::HiRes::time();
	$self->{"ps_$name"} = 0;
}

#-------------------------------------------------------------------------------
# ●タイマーの確認
#-------------------------------------------------------------------------------
sub check {
	if (!defined $Time::HiRes::VERSION) { return; }
	my ($self,$name) = @_;

	if (! $self->{"tm_$name"}) { return 0; }
	if (  $self->{"ps_$name"}) { return $self->{"df_$name"}; }
	return (Time::HiRes::time() - $self->{"tm_$name"}) + $self->{"df_$name"};
}

#-------------------------------------------------------------------------------
# ●タイマーの停止
#-------------------------------------------------------------------------------
sub stop {
	if (!defined $Time::HiRes::VERSION) { return; }
	my ($self,$name) = @_;

	if (! $self->{"tm_$name"}) { return; }
	if (  $self->{"ps_$name"}) { return $self->{"df_$name"}; }

	my $diff = $self->check($name);
	if (!defined $diff) { return ; }
	$self->{"ps_$name"} = 1;
	return ($self->{"df_$name"} = $diff);
}

#-------------------------------------------------------------------------------
# ●タイマーのクリア
#-------------------------------------------------------------------------------
sub clear {
	if (!defined $Time::HiRes::VERSION) { return; }
	my ($self,$name) = @_;

	undef $self->{"tm_$name"};
	undef $self->{"ps_$name"};
	undef $self->{"df_$name"};
}

#-------------------------------------------------------------------------------
# ●現在値取得
#-------------------------------------------------------------------------------
sub now {
	if (!defined $Time::HiRes::VERSION) { return; }
	return Time::HiRes::time();
}



1;
