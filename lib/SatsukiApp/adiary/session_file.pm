use strict;
#------------------------------------------------------------------------------
# セッションファイル管理用モジュール
#						(C)2013 nabe / nabe@abk.nu
#------------------------------------------------------------------------------
package SatsukiApp::adiary::session_file;
our $VERSION = '1.00';
#------------------------------------------------------------------------------
use Fcntl;	# for sysopen
###############################################################################
# ■基本処理
###############################################################################
#------------------------------------------------------------------------------
# ●【コンストラクタ】
#------------------------------------------------------------------------------
sub new {
	my $self = bless({}, shift);
	$self->{ROBJ} = shift;
	$self->{aobj} = shift;
	if (!$self->{aobj}) { die "[session_file] few arguments"; }
	return $self;
}

#------------------------------------------------------------------------------
# ●デストラクタ
#------------------------------------------------------------------------------
sub DESTROY {
	my $self = shift;
	$self->close();
}

###############################################################################
# ■メインルーチン
###############################################################################
#------------------------------------------------------------------------------
# ●sessionファイル名の生成
#------------------------------------------------------------------------------
sub get_filename {
	my $self = shift;
	my $aobj = $self->{aobj};
	my $ROBJ = $self->{ROBJ};
	if (! $aobj->{blog_admin} ) { return ; }

	my $sid  = $ROBJ->{Cookie}->{session}->{sid};
	if ($sid eq '') { return; }

	$sid =~ s/\W/_/g;
	my $dir = $ROBJ->get_tmpdir();
	return "$dir$aobj->{blogid}-$sid.session";
}

#------------------------------------------------------------------------------
# ●sessionファイルのオープン
#------------------------------------------------------------------------------
sub open {
	my $self = shift;
	my $file = $self->get_filename() || return;
	my $fh;
	sysopen($fh, $file, Fcntl::O_CREAT | Fcntl::O_WRONLY | Fcntl::O_TRUNC);
	$self->{fh} = $fh;
	return $fh;
}

#------------------------------------------------------------------------------
# ●sessionファイルへの書き込み
#------------------------------------------------------------------------------
sub msg {
	my $self = shift;
	my $ROBJ = $self->{ROBJ};
	my $msg  = $ROBJ->message_translate(@_);
	return $self->say($msg);
}
sub write {
	my $self = shift;
	my $fh   = $self->{fh} || return;
	print $fh @_;
}
sub say {
	my $self = shift;
	my $fh   = $self->{fh} || return;
	print $fh @_,"\n";
}

#------------------------------------------------------------------------------
# ●書き込みフラッシュ
#------------------------------------------------------------------------------
sub flush {
	my $self = shift;
	my $fh = $self->{fh} || return;

	my $old = select($fh);
	$|=1; $|=0;
	select($old);
}

sub autoflush {
	my $self = shift;
	my $flag = shift;
	my $fh = $self->{fh} || return;

	my $old = select($fh);
	$| = ($flag eq '') ? 1 : $flag;
	select($old);
}

#------------------------------------------------------------------------------
# ●ファイルクローズ
#------------------------------------------------------------------------------
sub close {
	my $self = shift;
	my $fh = $self->{fh} || return;
	close($fh);
}

#------------------------------------------------------------------------------
# ●sessionファイルの読み込み
#------------------------------------------------------------------------------
sub load {
	my $self = shift;
	my $file = $self->get_filename() || return;
	my $ROBJ = $self->{ROBJ};
	return $ROBJ->fread_lines($file);
}

